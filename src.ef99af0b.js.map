{"version":3,"sources":["js/task-3.js","index.js"],"names":["randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","delay","canProcess","Promise","resolve","reject","setTimeout","id","time","logSuccess","console","log","logError","warn","amount","then","catch"],"mappings":";;;AAKA,MAAMA,EAA4B,CAACC,EAAKC,IAC/BC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,GAGhDK,EAAkBC,IAChBC,MAAAA,EAAQR,EAA0B,IAAK,KACvCS,EAAaN,KAAKE,SAAW,GAE5B,OAAA,IAAIK,QAAQ,CAACC,EAASC,KAC3BC,WAAW,KACLJ,GACFE,EAAQ,CAAEG,GAAIP,EAAYO,GAAIC,KAAMP,IAEtCI,EAAOL,EAAYO,OAEpBN,IAGCQ,EAAa,EAAGF,GAAAA,EAAIC,KAAAA,MACxBE,QAAQC,mBAAmBJ,kBAAmBC,QAG1CI,EAAWL,IACfG,QAAQG,qCAAqCN,+BAG/CR,EAAgB,CAAEQ,GAAI,GAAIO,OAAQ,MAAOC,KAAKN,GAAYO,MAAMJ,GAEhEb,EAAgB,CAAEQ,GAAI,GAAIO,OAAQ,MAAOC,KAAKN,GAAYO,MAAMJ,GAEhEb,EAAgB,CAAEQ,GAAI,GAAIO,OAAQ,KAAMC,KAAKN,GAAYO,MAAMJ,GAE/Db,EAAgB,CAAEQ,GAAI,GAAIO,OAAQ,MAAOC,KAAKN,GAAYO,MAAMJ;;AClChE,aAHA,QAAA,oBAGA,QAAA","file":"src.ef99af0b.js","sourceRoot":"../src","sourcesContent":["// Перепиши функцию makeTransaction() так,\n//  чтобы она не использовала callback - функции\n//  onSuccess и onError, а принимала всего\n//  один параметр transaction и возвращала промис.\n\nconst randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst makeTransaction = transaction => {\n  const delay = randomIntegerFromInterval(200, 500);\n  const canProcess = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (canProcess) {\n        resolve({ id: transaction.id, time: delay });\n      }\n      reject(transaction.id);\n    });\n  }, delay);\n};\n\nconst logSuccess = ({ id, time }) => {\n  console.log(`Transaction ${id} processed in ${time}ms`);\n};\n\nconst logError = id => {\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n\nmakeTransaction({ id: 70, amount: 150 }).then(logSuccess).catch(logError);\n\nmakeTransaction({ id: 71, amount: 230 }).then(logSuccess).catch(logError);\n\nmakeTransaction({ id: 72, amount: 75 }).then(logSuccess).catch(logError);\n\nmakeTransaction({ id: 73, amount: 100 }).then(logSuccess).catch(logError);\n","import './sass/main.scss';\n// import './js/task-1.js';\n// import './js/task-2.js';\nimport './js/task-3.js';\n"]}